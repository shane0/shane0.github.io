{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"_workflow/","title":"workflow","text":"<pre><code>code ~/shane0.github.io/\n</code></pre> <ul> <li>optional alias shortcut </li> </ul> <pre><code>alias mks='mkdocs serve'\n</code></pre> <ul> <li>start the server <code>mks</code></li> <li>update site locally </li> <li>deploy with <code>./push.sh</code></li> </ul>","tags":["workflow"]},{"location":"_workflow/#screencast","title":"screencast","text":"","tags":["workflow"]},{"location":"adventures/","title":"adventures","text":"<p>adventure workflow</p> <ul> <li>there are no rules other than go outside</li> <li>I prefer long hikes in the mountains with just a backpack, and on the pct</li> <li>only because I do not own a horse or donkey to carry my backpack</li> <li>sometimes I go on bicycle or motorcycle tours</li> <li>I do have a jeep wrangler, but I haven't taken it on a long offroad trip, someday</li> </ul>","tags":["adventures"]},{"location":"automation/","title":"automation","text":"<p>code</p> <p>cheatsheets retro games </p> <p>recommendations for nerds</p> <ul> <li>if you type at a computer all day I highly recommend these:</li> <li>vim bash todo-cli python click cookiecutter mkdocs and django</li> <li>this site is on github pages and combines those</li> <li>you can deploy your own using this:</li> <li>workflow template </li> </ul> app local remote mkdocs-gh vscode is slow mkdocs ok online editing does not deploy? lexi readability report github action weird, this creates a report online only github pull requests markdownlint click &amp; keyboard shortcut Cmd H <code>fli bujo zl</code> n/a tests wip demos github action codemirror + vim tw n/a gh pages &amp; requires api key other option is tiddlyhost slides wip wip need to migrate my gitlab pipelines to github","tags":["automation"]},{"location":"automation/#diddling-around","title":"diddling around","text":"","tags":["automation"]},{"location":"keyboards/","title":"keyboards","text":"<ul> <li>I used to have a site dedicated to keyboards I will dig it up one day and put it back</li> <li>I have build custom keyboards and tried probably 20 different kinds</li> <li>there are programmable ortholinear keyboards</li> <li>they are well worth the investment in time and money</li> <li>I also highly recommend learning vim &amp; the many apps that use vim shortcuts</li> </ul>"},{"location":"keyboards/#layouts","title":"layouts","text":"<ul> <li>split: means the keyboard is two pieces accomodating human arms</li> <li>ortholinear: means the key layout is a grid pattern</li> <li>columnar: means the keys accomodate finger length on a flat plane</li> <li>manuform: means the keys accomodate finger length in 3 dimensions</li> </ul>"},{"location":"keyboards/#the-atreus","title":"the atreus","text":"<ul> <li>this is the keyboard I currently use and have used for around 5 years</li> <li>there are much better keyboards but this one is convenient and portable</li> <li>I would prefer if this keyboard were split and manuform</li> <li>my layout has layers for common tasks like print screen cut/copy/paste</li> <li>a layer with a numpad</li> <li>a layer for coding symbols brackets etc.</li> <li>a layer for mouse movements volume etc.</li> </ul>"},{"location":"keyboards/#links","title":"links","text":"<ul> <li>https://www.vim.org/</li> <li>https://colemak.com/Learn</li> <li>https://config.qmk.fm/#/handwired/dactyl/LAYOUT</li> </ul>"},{"location":"keyboards/#applying-first-principles-to-keyboards","title":"applying first principles to keyboards","text":"<ul> <li>first principles</li> </ul> <p>Here\u2019s a detailed 7-step process for first principles thinking:</p> <ol> <li>Define the Problem Clearly:</li> <li>the problem is we need to input content into a computer to communicate</li> <li> <p>the problem is we need to input commands into a computer to have it do work</p> </li> <li> <p>Gather Existing Knowledge and Assumptions:</p> </li> <li>Identify the current information, beliefs, or practices around this issue. What do people generally assume is true?</li> <li>people do not want to put in the effort most have stockholm syndrome they do not realize they are suffering</li> <li>to realize how bad a keyboard sucks you have to experience with your hands what a correctly engineered keyboard is like</li> <li>people do not think it is worth the effort to learn to use a keyboard that is designed correctly</li> <li>we could use voice recognition</li> <li>i can type faster than i think plus i tried voice and it still sucks</li> <li> <p>also i don't want to hear everyone around me yapping at a computer with their mouth</p> </li> <li> <p>Challenge Every Assumption:</p> </li> <li>Systematically question these assumptions. Ask yourself why things are done a certain way and if these assumptions are necessary or true.</li> <li>people who designed mechanical typewriters had problem figuring out how to prevent \"tyepbars\" from interfering with each other</li> <li>their solution was to move the keyboard layout around to fit the anatomy of the mechanical typewriter</li> <li>computer keyboards do not have \"typebars\" under the keys</li> <li>computers are not mechanical typewriters</li> <li> <p>computers can have a keyboard that is designed to fit human anatomy there is no reason to stagger the keys around</p> </li> <li> <p>Break Down the Problem to its Basic Elements:</p> <ul> <li>the problem is the keyboard should fit human anatomy</li> <li>our arms are spread apart the keyboard should be two pieces so you can place them at the width of your shoulders</li> <li>our thumbs have a wider range of motion so we can utilize thumbs for mor than just a spacebar</li> <li>our fingers have different lengths the keys should accomodate that anatomy</li> <li>software allows moving keys under the fingers eliminating the need to place any keys beyond reach of the fingers</li> </ul> </li> <li> <p>Understand Why These Fundamentals are True:</p> </li> <li>Validate why the basic elements you've identified are true. Are they based on evidence, or are they assumptions that you mistakenly accepted?</li> <li> <p>machines should perform effort for humans not the other way around</p> </li> <li> <p>Reconstruct from First Principles:</p> </li> <li>Build your understanding or solution from the ground up, using only the core truths identified in the previous steps. Work upwards logically without letting conventional thinking influence your approach.</li> <li>how many thumbs do we have? 1 per hand</li> <li>how many fingers do we have? 4 per hand</li> <li>how many keys can the thumb reach comfortably?  3</li> <li>how many keys can the inner fingers reach comfortably?  1 each + 1 upwards + 1 downwards</li> <li> <p>how many keys can the outtermost fingers reach comfortably?  1 each + 1 upwards + 1 downwards + 3 to the left or right</p> </li> <li> <p>Develop and Test New Solutions:</p> </li> <li>Once you\u2019ve restructured the problem using first principles, brainstorm novel solutions and test them rigorously. The goal is to arrive at approaches that are more efficient, innovative, or accurate based on your fresh understanding.</li> <li>this problem was already solved there are many programmable keyboards</li> </ol>"},{"location":"keyboards/#history","title":"history","text":"<ul> <li>history of stupid keyboard layouts</li> </ul>"},{"location":"keyboards/#heatmap","title":"heatmap","text":"<ul> <li>I learned colemak but the problem was sometimes I am in situations where it is not available</li> <li>having to retain both qwerty and colemak was inconvenient</li> <li>I should revisit this I am much more efficient using colemak it is amazing</li> <li>qwerty and institutionalized bad engineering is so lame lol</li> </ul>"},{"location":"quotes/","title":"quotes","text":"<p>some favorite quotes</p> <ul> <li>wei cheuh: subdue the mind &amp; abide in nothing, respect elders, be kind to juniors, be true in all endeavors &amp; live harmoniously with all life</li> <li>linus torvalds: I built linux &amp; give away linux because unix was too expensive &amp; i built git because subversion sucks</li> <li>einstein: given an hour I spend 55m on defining the problem &amp; 5 on the solution</li> <li>sunryu suzuki: everything is changing</li> <li>richard feynman: particles attract until they get close and the negative electrons repel</li> <li>richard feynman: if you cannot explain something in simple terms you do not understand it</li> <li>haikuin: there is no mirror</li> <li>unnamed zen master: seek nothing, cling to nothing and expect nothing</li> <li>elon: the best part is no part, do not optimize something that shouldn't exist, requires suck especially if the person that wrote them was an expert</li> </ul> <p>Some quotes &amp; traditions I try to model:</p> <p>\"If you can't explain something simply, you don't understand it well enough.\", Richard Feynman</p> <p>\"Simplicity is the ultimate sophistication\", Leonardo da Vinci</p> <p>\"Everything should be made as simple as possible, but not simpler.\", Albert Einstein</p>"},{"location":"quotes/#linus-torvalds","title":"Linus Torvalds","text":"<ul> <li>\"Talk is cheap. Show me the code.\"</li> <li>\"Software is like sex: it's better when it's free.\"</li> <li>\"Intelligence is the ability to avoid doing work, yet getting the work done.\"</li> <li>\"Given enough eyeballs, all bugs are shallow.\"</li> <li>\"Only wimps use tape backup. REAL men just upload their important stuff on ftp and let the rest of the world mirror it.\"</li> <li>\"In real open source, you have the right to control your own destiny.\"</li> <li>\"I am not a visionary. I'm an engineer. I don't have any lofty goals.\"</li> </ul> <p>These quotes are a reflection of Torvalds' pragmatism, his sense of humor, and his commitment to open source software. He is a respected figure in the tech community, and his quotes are often cited as inspiration for other programmers and engineers.</p> <p>Here is another one of my favorite Linus Torvalds quotes:</p> <p>\"The most important thing is to just do it. Don't think about it too much. Just start moving forward.\"</p> <p>This quote is a reminder that it is important to take action, even if we are not sure what we are doing. The best way to learn is by doing, and by making mistakes along the way.</p>"},{"location":"todo/","title":"todo cli","text":"<ul> <li>this page integrates two apps</li> <li>mkdos + todo cli</li> <li>it is a simple plain text or command line interface for task management</li> <li>this is included in my workflow app template</li> </ul>"},{"location":"todo/#this-projects-tasks","title":"this projects tasks","text":"<pre><code>(A) cleanup drafts/\n(A) setup versioning\n</code></pre> <pre><code>x 2023-06-02 update footer\nx 2023-09-12 install lexi and fix their missing docs/\nx 2023-10-16 gayatri\nx 2023-12-21 screencast workflow\nx 2023-12-21 todo screencast\nx 2024-02-22 add sids playlist to homepage\n</code></pre>"},{"location":"todo/#screencast","title":"screencast","text":"<ul> <li>todo cli repo</li> </ul>"},{"location":"todo/#todo-cli-relative-shortcuts","title":"todo cli relative shortcuts","text":"<ul> <li>this seems obvious</li> <li>configured to use <code>todocli/</code></li> <li>alias shortcuts that work relative to any folder</li> <li>this page you are reading embeds the todo and done file here</li> </ul> <pre><code>alias t='clear &amp;&amp; ./todocli/todo.sh'\nalias d='clear &amp;&amp; t listpri a'\nalias done='clear &amp;&amp; cat ./todocli/done.txt'\nalias snooze='clear &amp;&amp; t listpri'\nalias tedit='vim ./todocli/todo.txt'\nalias tall='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"+\"'\nalias tpri='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(A\"'\nalias tprib='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(B\"'\nalias tpric='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(C\"'\nalias thelp='clear &amp;&amp; ./todocli/todo.sh shorthelp'\n</code></pre>"},{"location":"bujo/2023/","title":"2023","text":"<ul> <li> pct section J southbound </li> <li> pct section I northbound</li> <li> completed nucamps back end &amp; devops &amp; front end &amp; full stack courses</li> </ul>"},{"location":"bujo/2023/#workflows","title":"workflows","text":""},{"location":"bujo/2023/#push","title":"push","text":"<ul> <li><code>./push.sh</code> script pushes &amp; deploys using:</li> </ul> <pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"bujo/2023/#local-server","title":"local server","text":"<ul> <li>start server with alias <code>mks</code> at http://127.0.0.1:8001/</li> </ul>"},{"location":"bujo/2023/#readability","title":"readability","text":"<ul> <li>lexi</li> </ul>"},{"location":"bujo/2023/#linting","title":"linting","text":"<ul> <li>FIXME: on mac run click: <code>fli bujo zl</code></li> <li>keys: https://facelessuser.github.io/pymdown-extensions/extensions/keys/</li> <li>markdownlint keyboard shortcut on mac: Cmd H</li> <li>example <code>++command++ ++h++</code></li> <li><code>~/Library/Application Support/Code/User/keybindings.json</code></li> </ul> <pre><code>// Place your key bindings in this file to override the defaultsauto[]\n[\n  {\n    \"key\": \"cmd+h\",\n    \"command\": \"markdownlint.fixAll\"\n  }\n]\n</code></pre>"},{"location":"bujo/2023/#2023-09-12","title":"2023-09-12","text":"<ul> <li>added readability (lexi) action</li> <li>weird, this only works on pr and adds the report on github</li> <li>this should happen before pushing</li> <li>first a command line</li> <li>then maybe an extension</li> <li>also where are the docs for these algorithms, how do i improve my docs?</li> <li>does it actually check for present tense and active voice?</li> </ul>"},{"location":"bujo/2023/#2023-07-02","title":"2023-07-02","text":"<ul> <li>setup release please</li> <li>install cli</li> </ul> <pre><code>npm i release-please -g\n</code></pre> <ul> <li>added action</li> <li>https://github.com/marketplace/actions/release-please-action</li> </ul> <pre><code>touch .github/workflows/release-please.ymladd action\n</code></pre>"},{"location":"bujo/2023/#2023-02-03","title":"2023-02-03","text":"<ul> <li>most of this content is my conversations with chatgpt</li> <li>so far: it finds decent answers and helps me learn to ask the right questions</li> <li>https://virtualenv.pypa.io/en/latest/user_guide.html</li> </ul> <pre><code>pip show mkdocs-material\n# fix pixelbook\npip install --upgrade mkdocs-material \nvirtualenv venv\npip install mkdocs-glightbox\n</code></pre> <ul> <li>whoops</li> </ul> <pre><code>git pull --no-ff\n</code></pre>"},{"location":"bujo/2024/","title":"2024","text":"<ul> <li> trip to boston max is starting at berkeley school of music </li> <li> completed chan meditation level 2 20 week course</li> <li> oregon pct sections g &amp; f southbound </li> </ul>"},{"location":"","title":"Home","text":""},{"location":"#meditation-adventures-music-and-automation","title":"meditation adventures music and automation","text":"<p>Docs</p> <p>workflow app template buddhism class music stoicism adventures my retro games </p>"},{"location":"#innovative-designs","title":"innovative designs","text":""},{"location":"#the-beard-when-it-was-almost-guru-length","title":"the beard when it was almost guru length","text":""},{"location":"#screencast","title":"screencast","text":""},{"location":"#adventures","title":"adventures","text":"<ul> <li>adventures</li> </ul>"},{"location":"#automation","title":"automation","text":"<ul> <li>automation</li> </ul>"},{"location":"#workflow","title":"workflow","text":"<ul> <li>workflow</li> </ul>"}]}